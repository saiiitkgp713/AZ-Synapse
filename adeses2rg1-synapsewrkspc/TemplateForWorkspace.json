{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "adeses2rg1-synapsewrkspc"
		},
		"adeses2rg1-synapsewrkspc-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'adeses2rg1-synapsewrkspc-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:adeses2rg1-synapsewrkspc.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"adeses2rg1strg1_link_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adeses2rg1strg1_link'"
		},
		"sqlDBLnkSrvc_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlDBLnkSrvc'"
		},
		"adeses2rg1-synapsewrkspc-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adeses2rg1strg2.dfs.core.windows.net"
		},
		"adeses2rg1strg1_link_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adeses2rg1strg1.dfs.core.windows.net/"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/PkFkmaps')]",
			"type": "Microsoft.Synapse/workspaces/dataMappers",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adeses2rg1-synapsewrkspc-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('adeses2rg1-synapsewrkspc-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adeses2rg1-synapsewrkspc-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adeses2rg1-synapsewrkspc-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adeses2rg1strg1_link')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adeses2rg1strg1_link_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adeses2rg1strg1_link_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlDBLnkSrvc')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sqlDBLnkSrvc_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ded-sql Parquet External Tables')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Qwerty@123456'\n\nCREATE DATABASE SCOPED CREDENTIAL SasToken\nwith IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET = 'sv=2022-11-02&ss=bfqt&srt=sco&sp=rwcpy&se=2023-09-30T23:00:12Z&st=2023-09-18T15:00:12Z&spr=https&sig=dww5k24ETkYefvKswwi9xIh0vTvNgDnP6IdN%2FM3V6Aw%3D'\n--- shared access signature for storage accounts expires, you may need new one\n\nCREATE EXTERNAL DATA SOURCE LOG_parqDAT\nWITH (\n    LOCATION = 'https://adeses2rg1strg1.blob.core.windows.net/parquet',\n    CREDENTIAL = SasToken\n)\n\nCREATE EXTERNAL FILE FORMAT parquetFormat\nWITH\n(  \n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n)\n\n\n-- Create an external table for a CSV file in ADLS\nCREATE EXTERNAL TABLE logParqTable\n(\n    [Correlation id] [varchar](200) NULL,\n    [Operation name] [varchar](200) NULL,\n    [Status] [varchar](100) NULL,\n    [Event category] [varchar](100) NULL,\n    [Level] [varchar](100) NULL,\n    [Time] [datetime] NULL,\n    [Subscription] [varchar](200) NULL,\n    [Event initiated by] [varchar](1000) NULL,\n    [Resource type] [varchar](1000) NULL,\n    [Resource group] [varchar](1000) NULL, \n    [Resource] [varchar](2000) NULL\n)\nWITH\n(\n    LOCATION = '/log.parquet',             -- Specify the path to the CSV file in ADLS\n    DATA_SOURCE = LOG_parqDAT,      -- Specify your external data source name\n    FILE_FORMAT = parquetFormat           -- Specify your external file format name\n)\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "Ded_sqlPool1",
						"poolName": "Ded_sqlPool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Ded-sql csv External Tables')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE DATABASE SCOPED CREDENTIAL AZcredential\nwith IDENTITY = 'adeses2rg1strg1',\nSECRET = 'TdCzG5WN6IUhp6nS4Ju++fURflvS3s8CS5vLFH6ATViXp7wHmhIOEKOJSiDjlqeff2WN+NNVHEZ8+AStpGSSXg=='\n--- for identity we used storage name and for secret we used ACCESS KEYS of the storage account \n\nCREATE EXTERNAL DATA SOURCE log_csvdATA\nWITH\n(\n    LOCATION =  'abfss://csv@adeses2rg1strg1.dfs.core.windows.net',\n            --- abfss://mycontainer@mystorageaccount.dfs.core.windows.net/mydata\n    CREDENTIAL = AZcredential,\n    TYPE = HADOOP\n)\n\nCREATE EXTERNAL FILE FORMAT csv_format\nWITH\n(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n        FIELD_TERMINATOR = ',',\n        FIRST_ROW = 2,  -- Skip the first row if it contains headers\n        USE_TYPE_DEFAULT = TRUE\n    )\n)\n\n\n-- Create an external table for a CSV file in ADLS\nCREATE EXTERNAL TABLE logTable\n(\n    [Correlation id] [varchar](200) NULL,\n    [Operation name] [varchar](200) NULL,\n    [Status] [varchar](100) NULL,\n    [Event category] [varchar](100) NULL,\n    [Level] [varchar](100) NULL,\n    [Time] [varchar](100) NULL,--------- [datetime] NULL,\n    ---- there is change hear, we used varchar rather the date beacuse of hadoop extension for reading the csv file\n    [Subscription] [varchar](200) NULL,\n    [Event initiated by] [varchar](1000) NULL,\n    [Resource type] [varchar](1000) NULL,\n    [Resource group] [varchar](1000) NULL, \n    [Resource] [varchar](2000) NULL\n)\nWITH\n(\n    LOCATION = '/Log.csv',             -- Specify the path to the CSV file in ADLS\n    DATA_SOURCE = log_csvdATA,      -- Specify your external data source name\n    FILE_FORMAT = csv_format           -- Specify your external file format name\n)\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "Ded_sqlPool1",
						"poolName": "Ded_sqlPool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) *\n FROM [OrderDetails]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "northwindLDB",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Serverless csv External Table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--CREATE DATABASE appdb\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Qwerty@123456'\n\nCREATE DATABASE SCOPED CREDENTIAL SasToken\nwith IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET = 'sv=2022-11-02&ss=bf&srt=sco&sp=rwy&se=2023-09-17T20:07:57Z&st=2023-09-17T12:07:57Z&spr=https&sig=0XmloKMlWKRZN8oNEenLNyL0lDCF%2BybRqSJuiUsQUSU%3D'\n--- shared access signature for storage accounts expires, you may need new one\n\nCREATE EXTERNAL DATA SOURCE LOG_DAT\nWITH (\n    LOCATION = 'https://adeses2rg1strg1.blob.core.windows.net/csv',\n    CREDENTIAL = SasToken\n)\n\nCREATE EXTERNAL FILE FORMAT csvFormat\nWITH\n(  \n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n        FIELD_TERMINATOR = ',',\n        FIRST_ROW = 2,  -- Skip the first row if it contains headers\n        USE_TYPE_DEFAULT = TRUE\n    )\n)\n\n\n-- Create an external table for a CSV file in ADLS\nCREATE EXTERNAL TABLE logTable\n(\n    [Correlation id] [varchar](200) NULL,\n    [Operation name] [varchar](200) NULL,\n    [Status] [varchar](100) NULL,\n    [Event category] [varchar](100) NULL,\n    [Level] [varchar](100) NULL,\n    [Time] [datetime] NULL,\n    [Subscription] [varchar](200) NULL,\n    [Event initiated by] [varchar](1000) NULL,\n    [Resource type] [varchar](1000) NULL,\n    [Resource group] [varchar](1000) NULL, \n    [Resource] [varchar](2000) NULL\n)\nWITH\n(\n    LOCATION = '/Log.csv',             -- Specify the path to the CSV file in ADLS\n    DATA_SOURCE = LOG_DAT,      -- Specify your external data source name\n    FILE_FORMAT = csvFormat           -- Specify your external file format name\n)\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Serverless multi parquet files External Tables')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--CREATE DATABASE appdb\n\n--CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Qwerty@123456'\n\nCREATE DATABASE SCOPED CREDENTIAL multiSasToken\nwith IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET = 'sv=2022-11-02&ss=bfqt&srt=sco&sp=rwcpy&se=2023-09-30T23:00:12Z&st=2023-09-18T15:00:12Z&spr=https&sig=dww5k24ETkYefvKswwi9xIh0vTvNgDnP6IdN%2FM3V6Aw%3D'\n--- shared access signature for storage accounts expires, you may need new one\n\nCREATE EXTERNAL DATA SOURCE LOG_multiparqDAT\nWITH (\n    LOCATION = 'https://adeses2rg1strg1.blob.core.windows.net/multi-parquet',\n    CREDENTIAL = multiSasToken\n)\n\nCREATE EXTERNAL FILE FORMAT parquetFormat\nWITH\n(  \n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n)\n\n\n-- Create an external table for a CSV file in ADLS\nCREATE EXTERNAL TABLE logmultiParqTable\n(\n    [Correlation id] [varchar](200) NULL,\n    [Operation name] [varchar](200) NULL,\n    [Status] [varchar](100) NULL,\n    [Event category] [varchar](100) NULL,\n    [Level] [varchar](100) NULL,\n    [Time] [datetime] NULL,\n    [Subscription] [varchar](200) NULL,\n    [Event initiated by] [varchar](1000) NULL,\n    [Resource type] [varchar](1000) NULL,\n    [Resource group] [varchar](1000) NULL, \n    [Resource] [varchar](2000) NULL\n)\nWITH\n(\n    LOCATION = '/',             -- Specify the path to the CSV file in ADLS\n    DATA_SOURCE = LOG_multiparqDAT,      -- Specify your external data source name\n    FILE_FORMAT = parquetFormat           -- Specify your external file format name\n)\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Serverless parquet External Tables')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--CREATE DATABASE appdb\n\n--CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Qwerty@123456'\n\nCREATE DATABASE SCOPED CREDENTIAL SasToken\nwith IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET = 'sv=2022-11-02&ss=bf&srt=sco&sp=rwy&se=2023-09-17T20:07:57Z&st=2023-09-17T12:07:57Z&spr=https&sig=0XmloKMlWKRZN8oNEenLNyL0lDCF%2BybRqSJuiUsQUSU%3D'\n--- shared access signature for storage accounts expires, you may need new one\n\nCREATE EXTERNAL DATA SOURCE LOG_parqDAT\nWITH (\n    LOCATION = 'https://adeses2rg1strg1.blob.core.windows.net/parquet',\n    CREDENTIAL = SasToken\n)\n\nCREATE EXTERNAL FILE FORMAT parquetFormat\nWITH\n(  \n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n)\n\n\n-- Create an external table for a CSV file in ADLS\nCREATE EXTERNAL TABLE logParqTable\n(\n    [Correlation id] [varchar](200) NULL,\n    [Operation name] [varchar](200) NULL,\n    [Status] [varchar](100) NULL,\n    [Event category] [varchar](100) NULL,\n    [Level] [varchar](100) NULL,\n    [Time] [datetime] NULL,\n    [Subscription] [varchar](200) NULL,\n    [Event initiated by] [varchar](1000) NULL,\n    [Resource type] [varchar](1000) NULL,\n    [Resource group] [varchar](1000) NULL, \n    [Resource] [varchar](2000) NULL\n)\nWITH\n(\n    LOCATION = '/log.parquet',             -- Specify the path to the CSV file in ADLS\n    DATA_SOURCE = LOG_parqDAT,      -- Specify your external data source name\n    FILE_FORMAT = parquetFormat           -- Specify your external file format name\n)\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Serverless-ExtrnalTbls-northwind')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Check if the database exists\nIF EXISTS (\n    SELECT name\n    FROM sys.databases\n    WHERE name = 'northwindDB'\n)\nBEGIN\n    -- Drop the database\n    USE northwindDB;\nEND\n\nDROP EXTERNAL TABLE Customers\nDROP EXTERNAL TABLE Categories\nDROP EXTERNAL TABLE Employees\nDROP EXTERNAL TABLE OrderDetails\nDROP EXTERNAL TABLE Orders\nDROP EXTERNAL TABLE Products\nDROP EXTERNAL TABLE Shippers\nDROP EXTERNAL TABLE Suppliers\n\nDROP EXTERNAL DATA SOURCE northwind\nDROP EXTERNAL FILE FORMAT csvFileformat\n\n-- Check if the database exists\nIF EXISTS (\n    SELECT name\n    FROM sys.databases\n    WHERE name = 'northwindDB'\n)\nBEGIN\n    -- Drop the database\n    USE master\n    DROP DATABASE northwindDB;\nEND\n\nCREATE DATABASE northwindDB\nUSE northwindDB\nALTER DATABASE northwindDB\n  COLLATE Latin1_General_100_BIN2_UTF8 \n\n\n--- Creating External Data Source for our data source (referring container)\nCREATE EXTERNAL DATA SOURCE northwind \nWITH\n(\n    LOCATION = 'https://adeses2rg1strg1.blob.core.windows.net/northwind/'\n    ----,    CREDENTIAL = -needed a scoped credential for access\n)\n\n--- Creating an external file format\nCREATE EXTERNAL FILE FORMAT csvFileformat \nWITH\n(\n\tFORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n        FIELD_TERMINATOR = ',',        \n        STRING_DELIMITER = '0x22',     ---- For String columns enclosed in \"\" and have a comma in them\n        ENCODING = 'UTF8',\n        FIRST_ROW = 2\n    )\n)\n\n\n-----Directly querying csv files from adlsgen2, for container : northwind\nSELECT TOP 100 *\nFROM\n\tOPENROWSET(\n\t\tBULK 'https://adeses2rg1strg1.blob.core.windows.net/northwind/suppliers.csv',\n\t\tFORMAT = 'csv',\n\t\tHEADER_ROW = TRUE,\n\t\tPARSER_VERSION = '2.0'\n\t) AS shippers\n\n\n\n-----------------------------------------------------------------\n---- creating Categories external table\nCREATE EXTERNAL TABLE Categories\n(\n    [CategoryID] INT,\n    [CategoryName] VARCHAR(200),\n    [Description] VARCHAR(200)\n)\nWITH \n(\n    LOCATION = 'categories.csv',\n    DATA_SOURCE = northwind,\n    FILE_FORMAT = csvFileformat\n)\nSELECT TOP 5 * FROM Categories\n\n\n-----------------------------------------------------------------\n---- creating Customers external table\nCREATE EXTERNAL TABLE Customers\n(\n    [CustomerID] INT,\n    [CustomerName] VARCHAR(50),\n    [ContactName] VARCHAR(50),\n    [Address] VARCHAR(50),\n    [City] VARCHAR(50),\n    [PostalCode] VARCHAR(20),\n    [Country] VARCHAR(20)\n)\nWITH \n(\n    LOCATION = 'customers.csv',\n    DATA_SOURCE = northwind,\n    FILE_FORMAT = csvFileformat\n)\nSELECT TOP 5 * FROM Customers\n\n\n--------------------------------------------------------------\n---- creating Employees external table\nCREATE EXTERNAL TABLE Employees\n(\n    [EmployeeID] INT,\n    [LastName] VARCHAR(50),\n    [FirstName] VARCHAR(50),\n    [BirthDate] DATETIME,\n    [Photo] VARCHAR(20),\n    [Notes] VARCHAR(MAX)\n)\nWITH \n(\n    LOCATION = 'employees.csv',\n    DATA_SOURCE = northwind,\n    FILE_FORMAT = csvFileformat\n)\nSELECT TOP 5 * FROM Employees\n\n\n--------------------------------------------------------------\n---- creating OrderDetails external table\nCREATE EXTERNAL TABLE OrderDetails\n(\n    [OrderDetailID] INT,\n    [OrderID] INT,\n    [ProductID] INT,\n    [Quantity] INT\n)\nWITH \n(\n    LOCATION = 'orderdetails.csv',\n    DATA_SOURCE = northwind,\n    FILE_FORMAT = csvFileformat\n)\nSELECT TOP 5 * FROM OrderDetails\n\n\n\n--------------------------------------------------------------\n---- creating orders external table\nCREATE EXTERNAL TABLE Orders\n(\n    [OrderID] INT,\n    [CustomerID] INT,\n    [EmployeeID] INT,\n    [OrderDate] DATETIME,\n    [ShipperID] INT\n)\nWITH \n(\n    LOCATION = 'orders.csv',\n    DATA_SOURCE = northwind,\n    FILE_FORMAT = csvFileformat\n)\nSELECT TOP 5 * FROM Orders\n\n\n--------------------------------------------------------------\n---- creating Products external table\nCREATE EXTERNAL TABLE Products\n(\n    [ProductID] INT,\n    [ProductName] VARCHAR(50),\n    [SupplierID] INTEGER,\n    [CategoryID] INTEGER,\n    [Unit] VARCHAR(25),\n    [Price] NUMERIC\n)\nWITH \n(\n    LOCATION = 'products.csv',\n    DATA_SOURCE = northwind,\n    FILE_FORMAT = csvFileformat\n)\nSELECT TOP 5 * FROM Products\n\n\n--------------------------------------------------------------\n---- creating Shippers external table\nCREATE EXTERNAL TABLE Shippers\n(\n    [ShipperID] INT,\n    [SHipperName] VARCHAR(25),\n    [Phone] VARCHAR(15)\n)\nWITH \n(\n    LOCATION = 'shippers.csv',\n    DATA_SOURCE = northwind,\n    FILE_FORMAT = csvFileformat\n)\nSELECT TOP 5 * FROM Shippers\n\n\n\n--------------------------------------------------------------\n---- creating Suppliers external table\nCREATE EXTERNAL TABLE Suppliers\n(\n    [SupplierID] INT,\n    [SupplierName] VARCHAR(50),\n    [ContactName] VARCHAR(50),\n    [Address] VARCHAR(50),\n    [City] VARCHAR(20),\n    [PostalCode] VARCHAR(10),\n    [Country] VARCHAR(15),\n    [Phone] VARCHAR(15)\n)\nWITH \n(\n    LOCATION = 'suppliers.csv',\n    DATA_SOURCE = northwind,\n    FILE_FORMAT = csvFileformat\n)\nSELECT TOP 5 * FROM Suppliers\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/northwindLDB')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "northwindLDB",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://data@adeses2rg1strg2.dfs.core.windows.net/northwindLDB",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "adeses2rg1-synapsewrkspc-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		}
	]
}